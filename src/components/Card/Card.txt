일반적인 Card 컴포넌트 구조 및 작동 방식
Card 컴포넌트는 보통 웹사이트에서 정보의 한 단위를 시각적으로 그룹화하여 보여주기 위해 사용됩니다. 예를 들어, 블로그 게시물 요약, 제품 정보, 사용자 프로필 등을 카드 형태로 표시할 수 있습니다.

아래는 일반적인 Card 컴포넌트의 예시 코드입니다.

1. Card.jsx (컴포넌트 파일)

이 파일은 카드의 구조를 정의합니다. props를 통해 이미지, 제목, 내용 등 동적인 데이터를 받아와서 화면에 렌더링합니다. children prop을 사용하면 카드 내부에 다른 컴포넌트나 복잡한 HTML 구조를 유연하게 넣을 수 있습니다.

New file: Card.jsx
+23
import React from 'react';
import './Card.css';

/**
 * 재사용 가능한 카드 컴포넌트
 * @param {object} props - 컴포넌트 프로퍼티
 * @param {string} [props.imageUrl] - 카드 상단에 표시될 이미지 URL
 * @param {string} [props.title] - 카드 제목
 * @param {React.ReactNode} props.children - 카드 내부에 표시될 컨텐츠
 */
function Card({ imageUrl, title, children }) {
  return (
    <div className="card">
      {imageUrl && <img src={imageUrl} alt={title || 'Card image'} className="card-image" />}
      <div className="card-content">
        {title && <h3 className="card-title">{title}</h3>}
        {children}
      </div>
    </div>
  );
}

export default Card;

2. Card.css (스타일 파일)

이 파일은 Card 컴포넌트의 디자인을 담당합니다. 그림자, 테두리, 여백 등을 정의하여 카드 형태의 시각적 모양을 만듭니다.

New file: Card.css
+30
.card {
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  overflow: hidden; /* 자식 요소(이미지 등)가 카드의 둥근 모서리를 넘어가지 않도록 함 */
  margin: 16px;
  max-width: 300px;
  background-color: #ffffff;
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

.card-image {
  width: 100%;
  height: 180px;
  object-fit: cover; /* 이미지가 비율을 유지하며 카드 영역을 꽉 채우도록 함 */
}

.card-content {
  padding: 16px;
}

.card-title {
  margin-top: 0;
  margin-bottom: 8px;
}

3. 사용 예시 (ProfilePage.jsx 등)

다른 컴포넌트에서 Card 컴포넌트를 가져와(import) 필요한 데이터를 props로 전달하여 사용합니다.

jsx
import React from 'react';
import Card from './components/Card/Card';

function ProfilePage() {
  return (
    <div>
      <h1>My Profile</h1>
      <Card 
        imageUrl="https://via.placeholder.com/300x180"
        title="John Doe"
      >
        <p>Software Engineer at Gemini</p>
        <button>Contact</button>
      </Card>

      <Card title="About Me">
        <p>I am a passionate developer who loves creating amazing web applications.</p>
      </Card>
    </div>
  );
}

export default ProfilePage;
사용 기술
React: 컴포넌트 기반 UI 라이브러리입니다. Card.jsx는 React의 함수형 컴포넌트로 작성되었습니다.
JSX: JavaScript를 확장한 문법으로, UI가 어떻게 생겨야 하는지 직관적으로 표현할 수 있게 해줍니다.
CSS: 컴포넌트의 스타일을 정의하는 데 사용됩니다. 모듈화된 CSS(Card.module.css)나 CSS-in-JS 라이브러리(e.g., styled-components)를 사용하기도 합니다.
Props (Properties): 부모 컴포넌트에서 자식 컴포넌트로 데이터를 전달하는 방법입니다. 이를 통해 Card 컴포넌트는 다양한 내용으로 재사용될 수 있습니다.